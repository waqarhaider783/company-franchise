/**
* Package: wordpress-plugin-starter - v1.0.3 
* Description: A simple starter kit for building awesome WordPress plugins 
* Last build: 2016-10-18 
* @author codekraft-studio 
* @license GPL-2.0+ 
*/
!function(a){"use strict";console.info("Plugin user script loaded.")}(jQuery);
jQuery(document).ready(function() {
    jQuery.ajax({ 
        url: locationId.ajax_url,
        type: "post",
        dataType: "json",
        data: {action: 'locationData', locationId:locationId.locationId},
        success: function(res){
            if(res.success){
                jQuery.cookie('franchise_id', locationId.locationId,{path: '/'});
                var data = res.data;
                if(data.locationLogo)
                    replaceLogo('#siteLogo', data.locationLogo);
                if(data.locationRibbons)
                    replaceSiteRibbons('#siteRibbon', data.locationRibbons);
                if(data.locationNumber)
                    replaceHeaderButton('#headerButton', data.locationNumber);
                if(data.locationAbout)
                    replaceMenuLink(data.locationAbout);
                if(data.locationTestmonial)
                    replaceMenuLink(data.locationTestmonial);
                if(data.locationCityPages){
                    addSubmenu(data.locationCityPages, data.locationSubmenuClasses);
                }
                if(data.servicesMenu){
                    checkServicesMenu(data.servicesMenu);
                }
                
            }
        }
    });
});

function replaceLogo(id, path){
    jQuery(id).attr('src', path);
}
function replaceSiteRibbons(id,obj){
    html = '';
    for (let i = 0; i < obj.length; i++) {
        html += `<li>
                    <a href="${obj[i].ribbonLink}">
                        <img src="${obj[i].ribbonIcon}" alt="${obj[i].ribbonText}" />
                    </a>
                </li>`;
        
        }
    jQuery('ul', id).html(html);
    
}
function replaceHeaderButton(id, obj){
        html = `<div>
                    <span>${obj.text}</span>
                    <a href="tel:${obj.number}">${obj.number}</a>
                </div>`;
        
    jQuery(id).html(html);
}
function replaceMenuLink(data){
    var id = data.dafault_menu_id;
    var url = data.url;
    jQuery(`#menu-item-${id} a`).attr('href', url);
}
function addSubmenu(data, submenuClasses){
    var id = data[0].dafault_menu_id;
    var citiesMenuItemsStr = ``;
    for (let i = 0; i < data.length; i++) {
        citiesMenuItemsStr += `<li class="menu-item menu-item-type-custom menu-item-object-custom"><a href="${data[i].url}">${data[i].title}</a> </li>`;
    }
    var citiesMenuItems = `<ul class="sub-menu">${citiesMenuItemsStr}</ul>`;
    jQuery(`#menu-item-${id}`).addClass(submenuClasses.li_classes);
    jQuery(`#menu-item-${id} a`).addClass(submenuClasses.a_classes);
    jQuery(`#menu-item-${id} a`).append(submenuClasses.submenu_indicator);
    jQuery(`#menu-item-${id}`).append(citiesMenuItems);
}
function checkServicesMenu(data){
    // console.log(data);
    var parentMenuId;
    var childMenuId;
    Object.entries(data).forEach(items => {
        Object.entries(items[1]).forEach(servicesMenuItems => {
            console.log(servicesMenuItems);
            for (let i = 0; i < servicesMenuItems.length; i++) {
                if(servicesMenuItems[1].indexOf('parent') !== -1){
                    parentMenuId = servicesMenuItems[0];
                    if(servicesMenuItems[1].indexOf('on') === -1){
                        jQuery(`#menu-item-${parentMenuId}`).remove();
                    }
                }
                if(servicesMenuItems[1].indexOf('child') !== -1){
                    if(jQuery(`#menu-item-${parentMenuId}`).length > 0){
                        if(servicesMenuItems[1].indexOf('on') === -1){
                            childMenuId = servicesMenuItems[1][0];
                            jQuery(`#menu-item-${childMenuId}`).remove();
                        }
                        if(servicesMenuItems[1].indexOf('on') !== -1){
                            childMenuId = servicesMenuItems[1][1];
                            childMenuUrl = servicesMenuItems[1][3];
                            if(childMenuUrl !== '')
                                jQuery(`#menu-item-${childMenuId} a`).attr('href', childMenuUrl);
                        }
                    }
                }
            }
        });
    });
}